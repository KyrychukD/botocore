#!/usr/bin/env python
# pylint: disable=invalid-name
"""Build a service client class from a JSON specification."""

import argparse
import json
import re
import string
import sys

from botocore import xform_name
from botocore.client import ClientMethodDocstring, ServiceModel
from botocore.hooks import HierarchicalEmitter
from botocore.utils import get_service_module_name

CLASS_HEADER = '''\
# THIS FILE IS AUTO-GENERATED. DO NOT EDIT THIS FILE BY HAND.

from botocore.client import BaseClient

class {class_name}(BaseClient):
'''

METHOD_TEMPLATE = '''\

    def {py_operation_name}(self, **kwargs):
        """{docstring}
        """
        return self._make_api_call("{operation_name}", kwargs)
'''


def _fix_docstring(docstring, indent='        '):
    """Fix docstring.

    Remove leading whitespace and add indent to all lines except first.
    """
    skip = 0
    while skip < len(docstring) and docstring[skip] in string.whitespace:
        skip += 1

    return re.sub('\n', f'\n{indent}', docstring[skip:])


def main(args):
    parser = argparse.ArgumentParser()
    parser.add_argument('specification_file')
    parser.add_argument('output_file')
    args = parser.parse_args(args)
    with open(args.specification_file) as specification:
        specification = json.load(specification)
        service_model = ServiceModel(specification)
    with open(args.output_file, 'w') as output:
        output.write(
            CLASS_HEADER.format(
                class_name=get_service_module_name(service_model),
            )
        )

        for operation_name in service_model.operation_names:
            py_operation_name = xform_name(operation_name)
            operation_model = service_model.operation_model(operation_name)
            fake_event_emitter = HierarchicalEmitter()
            docstring = ClientMethodDocstring(
                operation_model=operation_model,
                method_name=operation_name,
                event_emitter=fake_event_emitter,
                method_description=operation_model.documentation,
                example_prefix='response = client.%s' % py_operation_name,
                include_signature=False,
            )
            output.write(
                METHOD_TEMPLATE.format(
                    py_operation_name=py_operation_name,
                    operation_name=operation_name,
                    docstring=_fix_docstring(str(docstring)),
                )
            )


if __name__ == '__main__':
    main(sys.argv[1:])
