# THIS FILE IS AUTO-GENERATED. DO NOT EDIT THIS FILE BY HAND.

from botocore.client import BaseClient

class ResourceGroups(BaseClient):

    def create_group(self, **kwargs):
        """Creates a group with a specified name, description, and resource query.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/CreateGroup>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.create_group(
              Name='string',
              Description='string',
              ResourceQuery={
                  'Type': 'TAG_FILTERS_1_0',
                  'Query': 'string'
              },
              Tags={
                  'string': 'string'
              }
          )
        :type Name: string
        :param Name: **[REQUIRED]** 
        
          The name of the group, which is the identifier of the group in other operations. A resource group name cannot be updated after it is created. A resource group name can have a maximum of 128 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with ``AWS`` or ``aws`` ; these are reserved. A resource group name must be unique within your account.
        
          
        
        
        :type Description: string
        :param Description: 
        
          The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.
        
          
        
        
        :type ResourceQuery: dict
        :param ResourceQuery: **[REQUIRED]** 
        
          The resource query that determines which AWS resources are members of this group.
        
          
        
        
          - **Type** *(string) --* **[REQUIRED]** 
        
            The type of the query. The valid value in this release is ``TAG_FILTERS_1_0`` .
        
             
        
             * ``TAG_FILTERS_1_0:`` * A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API GetResources operation. When more than one element is present, only resources that match all filters are part of the result. If a filter specifies more than one value for a key, a resource matches the filter if its tag value matches any of the specified values.
        
            
        
          
          - **Query** *(string) --* **[REQUIRED]** 
        
            The query that defines a group or a search.
        
            
        
          
        
        :type Tags: dict
        :param Tags: 
        
          The tags to add to the group. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
        
          
        
        
          - *(string) --* 
        
          
            - *(string) --* 
        
            
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Group': {
                    'GroupArn': 'string',
                    'Name': 'string',
                    'Description': 'string'
                },
                'ResourceQuery': {
                    'Type': 'TAG_FILTERS_1_0',
                    'Query': 'string'
                },
                'Tags': {
                    'string': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Group** *(dict) --* 
        
              A full description of the resource group after it is created.
        
              
              
        
              - **GroupArn** *(string) --* 
        
                The ARN of a resource group.
        
                
              
        
              - **Name** *(string) --* 
        
                The name of a resource group.
        
                
              
        
              - **Description** *(string) --* 
        
                The description of the resource group.
        
                
          
            
        
            - **ResourceQuery** *(dict) --* 
        
              The resource query associated with the group.
        
              
              
        
              - **Type** *(string) --* 
        
                The type of the query. The valid value in this release is ``TAG_FILTERS_1_0`` .
        
                 
        
                 * ``TAG_FILTERS_1_0:`` * A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API GetResources operation. When more than one element is present, only resources that match all filters are part of the result. If a filter specifies more than one value for a key, a resource matches the filter if its tag value matches any of the specified values.
        
                
              
        
              - **Query** *(string) --* 
        
                The query that defines a group or a search.
        
                
          
            
        
            - **Tags** *(dict) --* 
        
              The tags associated with the group.
        
              
              
        
              - *(string) --* 
                
        
                - *(string) --* 
          
        
        
        """
        return self._make_api_call("CreateGroup", kwargs)

    def delete_group(self, **kwargs):
        """Deletes a specified resource group. Deleting a resource group does not delete resources that are members of the group; it only deletes the group structure.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/DeleteGroup>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.delete_group(
              GroupName='string'
          )
        :type GroupName: string
        :param GroupName: **[REQUIRED]** 
        
          The name of the resource group to delete.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Group': {
                    'GroupArn': 'string',
                    'Name': 'string',
                    'Description': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Group** *(dict) --* 
        
              A full description of the deleted resource group.
        
              
              
        
              - **GroupArn** *(string) --* 
        
                The ARN of a resource group.
        
                
              
        
              - **Name** *(string) --* 
        
                The name of a resource group.
        
                
              
        
              - **Description** *(string) --* 
        
                The description of the resource group.
        
                
          
        
        """
        return self._make_api_call("DeleteGroup", kwargs)

    def get_group(self, **kwargs):
        """Returns information about a specified resource group.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/GetGroup>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.get_group(
              GroupName='string'
          )
        :type GroupName: string
        :param GroupName: **[REQUIRED]** 
        
          The name of the resource group.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Group': {
                    'GroupArn': 'string',
                    'Name': 'string',
                    'Description': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Group** *(dict) --* 
        
              A full description of the resource group.
        
              
              
        
              - **GroupArn** *(string) --* 
        
                The ARN of a resource group.
        
                
              
        
              - **Name** *(string) --* 
        
                The name of a resource group.
        
                
              
        
              - **Description** *(string) --* 
        
                The description of the resource group.
        
                
          
        
        """
        return self._make_api_call("GetGroup", kwargs)

    def get_group_query(self, **kwargs):
        """Returns the resource query associated with the specified resource group.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/GetGroupQuery>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.get_group_query(
              GroupName='string'
          )
        :type GroupName: string
        :param GroupName: **[REQUIRED]** 
        
          The name of the resource group.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'GroupQuery': {
                    'GroupName': 'string',
                    'ResourceQuery': {
                        'Type': 'TAG_FILTERS_1_0',
                        'Query': 'string'
                    }
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **GroupQuery** *(dict) --* 
        
              The resource query associated with the specified group.
        
              
              
        
              - **GroupName** *(string) --* 
        
                The name of a resource group that is associated with a specific resource query.
        
                
              
        
              - **ResourceQuery** *(dict) --* 
        
                The resource query which determines which AWS resources are members of the associated resource group.
        
                
                
        
                - **Type** *(string) --* 
        
                  The type of the query. The valid value in this release is ``TAG_FILTERS_1_0`` .
        
                   
        
                   * ``TAG_FILTERS_1_0:`` * A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API GetResources operation. When more than one element is present, only resources that match all filters are part of the result. If a filter specifies more than one value for a key, a resource matches the filter if its tag value matches any of the specified values.
        
                  
                
        
                - **Query** *(string) --* 
        
                  The query that defines a group or a search.
        
                  
            
          
        
        """
        return self._make_api_call("GetGroupQuery", kwargs)

    def get_tags(self, **kwargs):
        """Returns a list of tags that are associated with a resource, specified by an ARN.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/GetTags>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.get_tags(
              Arn='string'
          )
        :type Arn: string
        :param Arn: **[REQUIRED]** 
        
          The ARN of the resource for which you want a list of tags. The resource must exist within the account you are using.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Arn': 'string',
                'Tags': {
                    'string': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Arn** *(string) --* 
        
              The ARN of the tagged resource.
        
              
            
        
            - **Tags** *(dict) --* 
        
              The tags associated with the specified resource.
        
              
              
        
              - *(string) --* 
                
        
                - *(string) --* 
          
        
        
        """
        return self._make_api_call("GetTags", kwargs)

    def list_group_resources(self, **kwargs):
        """Returns a list of ARNs of resources that are members of a specified resource group.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/ListGroupResources>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.list_group_resources(
              GroupName='string',
              Filters=[
                  {
                      'Name': 'resource-type',
                      'Values': [
                          'string',
                      ]
                  },
              ],
              MaxResults=123,
              NextToken='string'
          )
        :type GroupName: string
        :param GroupName: **[REQUIRED]** 
        
          The name of the resource group.
        
          
        
        
        :type Filters: list
        :param Filters: 
        
          Filters, formatted as ResourceFilter objects, that you want to apply to a ListGroupResources operation.
        
           
        
           
          * ``resource-type`` - Filter resources by their type. Specify up to five resource types in the format AWS::ServiceCode::ResourceType. For example, AWS::EC2::Instance, or AWS::S3::Bucket. 
           
        
          
        
        
          - *(dict) --* 
        
            A filter name and value pair that is used to obtain more specific results from a list of resources.
        
            
        
          
            - **Name** *(string) --* **[REQUIRED]** 
        
              The name of the filter. Filter names are case-sensitive.
        
              
        
            
            - **Values** *(list) --* **[REQUIRED]** 
        
              One or more filter values. Allowed filter values vary by resource filter name, and are case-sensitive.
        
              
        
            
              - *(string) --* 
        
              
          
          
        
        :type MaxResults: integer
        :param MaxResults: 
        
          The maximum number of group member ARNs that are returned in a single call by ListGroupResources, in paginated output. By default, this number is 50.
        
          
        
        
        :type NextToken: string
        :param NextToken: 
        
          The NextToken value that is returned in a paginated ListGroupResources request. To get the next page of results, run the call again, add the NextToken parameter, and specify the NextToken value.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'ResourceIdentifiers': [
                    {
                        'ResourceArn': 'string',
                        'ResourceType': 'string'
                    },
                ],
                'NextToken': 'string'
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **ResourceIdentifiers** *(list) --* 
        
              The ARNs and resource types of resources that are members of the group that you specified.
        
              
              
        
              - *(dict) --* 
        
                The ARN of a resource, and its resource type.
        
                
                
        
                - **ResourceArn** *(string) --* 
        
                  The ARN of a resource.
        
                  
                
        
                - **ResourceType** *(string) --* 
        
                  The resource type of a resource, such as ``AWS::EC2::Instance`` .
        
                  
            
          
            
        
            - **NextToken** *(string) --* 
        
              The NextToken value to include in a subsequent ``ListGroupResources`` request, to get more results.
        
              
        
        """
        return self._make_api_call("ListGroupResources", kwargs)

    def list_groups(self, **kwargs):
        """Returns a list of existing resource groups in your account.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/ListGroups>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.list_groups(
              MaxResults=123,
              NextToken='string'
          )
        :type MaxResults: integer
        :param MaxResults: 
        
          The maximum number of resource group results that are returned by ListGroups in paginated output. By default, this number is 50.
        
          
        
        
        :type NextToken: string
        :param NextToken: 
        
          The NextToken value that is returned in a paginated ``ListGroups`` request. To get the next page of results, run the call again, add the NextToken parameter, and specify the NextToken value.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Groups': [
                    {
                        'GroupArn': 'string',
                        'Name': 'string',
                        'Description': 'string'
                    },
                ],
                'NextToken': 'string'
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Groups** *(list) --* 
        
              A list of resource groups.
        
              
              
        
              - *(dict) --* 
        
                A resource group.
        
                
                
        
                - **GroupArn** *(string) --* 
        
                  The ARN of a resource group.
        
                  
                
        
                - **Name** *(string) --* 
        
                  The name of a resource group.
        
                  
                
        
                - **Description** *(string) --* 
        
                  The description of the resource group.
        
                  
            
          
            
        
            - **NextToken** *(string) --* 
        
              The NextToken value to include in a subsequent ``ListGroups`` request, to get more results.
        
              
        
        """
        return self._make_api_call("ListGroups", kwargs)

    def search_resources(self, **kwargs):
        """Returns a list of AWS resource identifiers that matches a specified query. The query uses the same format as a resource query in a CreateGroup or UpdateGroupQuery operation.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/SearchResources>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.search_resources(
              ResourceQuery={
                  'Type': 'TAG_FILTERS_1_0',
                  'Query': 'string'
              },
              MaxResults=123,
              NextToken='string'
          )
        :type ResourceQuery: dict
        :param ResourceQuery: **[REQUIRED]** 
        
          The search query, using the same formats that are supported for resource group definition.
        
          
        
        
          - **Type** *(string) --* **[REQUIRED]** 
        
            The type of the query. The valid value in this release is ``TAG_FILTERS_1_0`` .
        
             
        
             * ``TAG_FILTERS_1_0:`` * A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API GetResources operation. When more than one element is present, only resources that match all filters are part of the result. If a filter specifies more than one value for a key, a resource matches the filter if its tag value matches any of the specified values.
        
            
        
          
          - **Query** *(string) --* **[REQUIRED]** 
        
            The query that defines a group or a search.
        
            
        
          
        
        :type MaxResults: integer
        :param MaxResults: 
        
          The maximum number of group member ARNs returned by ``SearchResources`` in paginated output. By default, this number is 50.
        
          
        
        
        :type NextToken: string
        :param NextToken: 
        
          The NextToken value that is returned in a paginated ``SearchResources`` request. To get the next page of results, run the call again, add the NextToken parameter, and specify the NextToken value.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'ResourceIdentifiers': [
                    {
                        'ResourceArn': 'string',
                        'ResourceType': 'string'
                    },
                ],
                'NextToken': 'string'
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **ResourceIdentifiers** *(list) --* 
        
              The ARNs and resource types of resources that are members of the group that you specified.
        
              
              
        
              - *(dict) --* 
        
                The ARN of a resource, and its resource type.
        
                
                
        
                - **ResourceArn** *(string) --* 
        
                  The ARN of a resource.
        
                  
                
        
                - **ResourceType** *(string) --* 
        
                  The resource type of a resource, such as ``AWS::EC2::Instance`` .
        
                  
            
          
            
        
            - **NextToken** *(string) --* 
        
              The NextToken value to include in a subsequent ``SearchResources`` request, to get more results.
        
              
        
        """
        return self._make_api_call("SearchResources", kwargs)

    def tag(self, **kwargs):
        """Adds specified tags to a resource with the specified ARN. Existing tags on a resource are not changed if they are not specified in the request parameters.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/Tag>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.tag(
              Arn='string',
              Tags={
                  'string': 'string'
              }
          )
        :type Arn: string
        :param Arn: **[REQUIRED]** 
        
          The ARN of the resource to which to add tags.
        
          
        
        
        :type Tags: dict
        :param Tags: **[REQUIRED]** 
        
          The tags to add to the specified resource. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
        
          
        
        
          - *(string) --* 
        
          
            - *(string) --* 
        
            
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Arn': 'string',
                'Tags': {
                    'string': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Arn** *(string) --* 
        
              The ARN of the tagged resource.
        
              
            
        
            - **Tags** *(dict) --* 
        
              The tags that have been added to the specified resource.
        
              
              
        
              - *(string) --* 
                
        
                - *(string) --* 
          
        
        
        """
        return self._make_api_call("Tag", kwargs)

    def untag(self, **kwargs):
        """Deletes specified tags from a specified resource.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/Untag>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.untag(
              Arn='string',
              Keys=[
                  'string',
              ]
          )
        :type Arn: string
        :param Arn: **[REQUIRED]** 
        
          The ARN of the resource from which to remove tags.
        
          
        
        
        :type Keys: list
        :param Keys: **[REQUIRED]** 
        
          The keys of the tags to be removed.
        
          
        
        
          - *(string) --* 
        
          
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Arn': 'string',
                'Keys': [
                    'string',
                ]
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Arn** *(string) --* 
        
              The ARN of the resource from which tags have been removed.
        
              
            
        
            - **Keys** *(list) --* 
        
              The keys of tags that have been removed.
        
              
              
        
              - *(string) --* 
          
        
        """
        return self._make_api_call("Untag", kwargs)

    def update_group(self, **kwargs):
        """Updates an existing group with a new or changed description. You cannot update the name of a resource group.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/UpdateGroup>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.update_group(
              GroupName='string',
              Description='string'
          )
        :type GroupName: string
        :param GroupName: **[REQUIRED]** 
        
          The name of the resource group for which you want to update its description.
        
          
        
        
        :type Description: string
        :param Description: 
        
          The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Group': {
                    'GroupArn': 'string',
                    'Name': 'string',
                    'Description': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **Group** *(dict) --* 
        
              The full description of the resource group after it has been updated.
        
              
              
        
              - **GroupArn** *(string) --* 
        
                The ARN of a resource group.
        
                
              
        
              - **Name** *(string) --* 
        
                The name of a resource group.
        
                
              
        
              - **Description** *(string) --* 
        
                The description of the resource group.
        
                
          
        
        """
        return self._make_api_call("UpdateGroup", kwargs)

    def update_group_query(self, **kwargs):
        """Updates the resource query of a group.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/resource-groups-2017-11-27/UpdateGroupQuery>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.update_group_query(
              GroupName='string',
              ResourceQuery={
                  'Type': 'TAG_FILTERS_1_0',
                  'Query': 'string'
              }
          )
        :type GroupName: string
        :param GroupName: **[REQUIRED]** 
        
          The name of the resource group for which you want to edit the query.
        
          
        
        
        :type ResourceQuery: dict
        :param ResourceQuery: **[REQUIRED]** 
        
          The resource query that determines which AWS resources are members of the resource group.
        
          
        
        
          - **Type** *(string) --* **[REQUIRED]** 
        
            The type of the query. The valid value in this release is ``TAG_FILTERS_1_0`` .
        
             
        
             * ``TAG_FILTERS_1_0:`` * A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API GetResources operation. When more than one element is present, only resources that match all filters are part of the result. If a filter specifies more than one value for a key, a resource matches the filter if its tag value matches any of the specified values.
        
            
        
          
          - **Query** *(string) --* **[REQUIRED]** 
        
            The query that defines a group or a search.
        
            
        
          
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'GroupQuery': {
                    'GroupName': 'string',
                    'ResourceQuery': {
                        'Type': 'TAG_FILTERS_1_0',
                        'Query': 'string'
                    }
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
            
        
            - **GroupQuery** *(dict) --* 
        
              The resource query associated with the resource group after the update.
        
              
              
        
              - **GroupName** *(string) --* 
        
                The name of a resource group that is associated with a specific resource query.
        
                
              
        
              - **ResourceQuery** *(dict) --* 
        
                The resource query which determines which AWS resources are members of the associated resource group.
        
                
                
        
                - **Type** *(string) --* 
        
                  The type of the query. The valid value in this release is ``TAG_FILTERS_1_0`` .
        
                   
        
                   * ``TAG_FILTERS_1_0:`` * A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API GetResources operation. When more than one element is present, only resources that match all filters are part of the result. If a filter specifies more than one value for a key, a resource matches the filter if its tag value matches any of the specified values.
        
                  
                
        
                - **Query** *(string) --* 
        
                  The query that defines a group or a search.
        
                  
            
          
        
        """
        return self._make_api_call("UpdateGroupQuery", kwargs)
