# THIS FILE IS AUTO-GENERATED. DO NOT EDIT THIS FILE BY HAND.

from botocore.client import BaseClient

class IoTDataPlane(BaseClient):

    def delete_thing_shadow(self, **kwargs):
        """Deletes the thing shadow for the specified thing.
        
         
        
        For more information, see `DeleteThingShadow <http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html>`__ in the *AWS IoT Developer Guide* .
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/iot-data-2015-05-28/DeleteThingShadow>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.delete_thing_shadow(
              thingName='string'
          )
        :type thingName: string
        :param thingName: **[REQUIRED]** 
        
          The name of the thing.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'payload': StreamingBody()
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            The output from the DeleteThingShadow operation.
        
            
            
        
            - **payload** (:class:`.StreamingBody`) -- 
        
              The state information, in JSON format.
        
              
        
        """
        return self._make_api_call("DeleteThingShadow", kwargs)

    def get_thing_shadow(self, **kwargs):
        """Gets the thing shadow for the specified thing.
        
         
        
        For more information, see `GetThingShadow <http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html>`__ in the *AWS IoT Developer Guide* .
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/iot-data-2015-05-28/GetThingShadow>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.get_thing_shadow(
              thingName='string'
          )
        :type thingName: string
        :param thingName: **[REQUIRED]** 
        
          The name of the thing.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'payload': StreamingBody()
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            The output from the GetThingShadow operation.
        
            
            
        
            - **payload** (:class:`.StreamingBody`) -- 
        
              The state information, in JSON format.
        
              
        
        """
        return self._make_api_call("GetThingShadow", kwargs)

    def publish(self, **kwargs):
        """Publishes state information.
        
         
        
        For more information, see `HTTP Protocol <http://docs.aws.amazon.com/iot/latest/developerguide/protocols.html#http>`__ in the *AWS IoT Developer Guide* .
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/iot-data-2015-05-28/Publish>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.publish(
              topic='string',
              qos=123,
              payload=b'bytes'|file
          )
        :type topic: string
        :param topic: **[REQUIRED]** 
        
          The name of the MQTT topic.
        
          
        
        
        :type qos: integer
        :param qos: 
        
          The Quality of Service (QoS) level.
        
          
        
        
        :type payload: bytes or seekable file-like object
        :param payload: 
        
          The state information, in JSON format.
        
          
        
        
        
        :returns: None
        """
        return self._make_api_call("Publish", kwargs)

    def update_thing_shadow(self, **kwargs):
        """Updates the thing shadow for the specified thing.
        
         
        
        For more information, see `UpdateThingShadow <http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html>`__ in the *AWS IoT Developer Guide* .
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/iot-data-2015-05-28/UpdateThingShadow>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.update_thing_shadow(
              thingName='string',
              payload=b'bytes'|file
          )
        :type thingName: string
        :param thingName: **[REQUIRED]** 
        
          The name of the thing.
        
          
        
        
        :type payload: bytes or seekable file-like object
        :param payload: **[REQUIRED]** 
        
          The state information, in JSON format.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'payload': StreamingBody()
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            The output from the UpdateThingShadow operation.
        
            
            
        
            - **payload** (:class:`.StreamingBody`) -- 
        
              The state information, in JSON format.
        
              
        
        """
        return self._make_api_call("UpdateThingShadow", kwargs)
