# THIS FILE IS AUTO-GENERATED. DO NOT EDIT THIS FILE BY HAND.

from botocore.client import BaseClient

class ServerlessApplicationRepository(BaseClient):

    def create_application(self, **kwargs):
        """Creates an application, optionally including an AWS SAM file to create the first application version in the same call.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/CreateApplication>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.create_application(
              Author='string',
              Description='string',
              HomePageUrl='string',
              Labels=[
                  'string',
              ],
              LicenseBody='string',
              LicenseUrl='string',
              Name='string',
              ReadmeBody='string',
              ReadmeUrl='string',
              SemanticVersion='string',
              SourceCodeUrl='string',
              SpdxLicenseId='string',
              TemplateBody='string',
              TemplateUrl='string'
          )
        :type Author: string
        :param Author: **[REQUIRED]** 
        
          The name of the author publishing the app.
        
          
        
          Minimum length=1. Maximum length=127.
        
          
        
          Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";
        
          
        
        
        :type Description: string
        :param Description: **[REQUIRED]** 
        
          The description of the application.
        
          
        
          Minimum length=1. Maximum length=256
        
          
        
        
        :type HomePageUrl: string
        :param HomePageUrl: 
        
          A URL with more information about the application, for example the location of your GitHub repository for the application.
        
          
        
        
        :type Labels: list
        :param Labels: 
        
          Labels to improve discovery of apps in search results.
        
          
        
          Minimum length=1. Maximum length=127. Maximum number of labels: 10
        
          
        
          Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";
        
          
        
        
          - *(string) --* 
        
          
        
        :type LicenseBody: string
        :param LicenseBody: 
        
          A local text file that contains the license of the app that matches the spdxLicenseID value of your application. The file is of the format file://<path>/<filename>.
        
          
        
          Maximum size 5 MB
        
          
        
          Note: Only one of licenseBody and licenseUrl can be specified, otherwise an error will result.
        
          
        
        
        :type LicenseUrl: string
        :param LicenseUrl: 
        
          A link to the S3 object that contains the license of the app that matches the spdxLicenseID value of your application.
        
          
        
          Maximum size 5 MB
        
          
        
          Note: Only one of licenseBody and licenseUrl can be specified, otherwise an error will result.
        
          
        
        
        :type Name: string
        :param Name: **[REQUIRED]** 
        
          The name of the application that you want to publish.
        
          
        
          Minimum length=1. Maximum length=140
        
          
        
          Pattern: "[a-zA-Z0-9\\-]+";
        
          
        
        
        :type ReadmeBody: string
        :param ReadmeBody: 
        
          A local text readme file in Markdown language that contains a more detailed description of the application and how it works. The file is of the format file://<path>/<filename>.
        
          
        
          Maximum size 5 MB
        
          
        
          Note: Only one of readmeBody and readmeUrl can be specified, otherwise an error will result.
        
          
        
        
        :type ReadmeUrl: string
        :param ReadmeUrl: 
        
          A link to the S3 object in Markdown language that contains a more detailed description of the application and how it works.
        
          
        
          Maximum size 5 MB
        
          
        
          Note: Only one of readmeBody and readmeUrl can be specified, otherwise an error will result.
        
          
        
        
        :type SemanticVersion: string
        :param SemanticVersion: 
        
          The semantic version of the application:
        
          
        
           `https\://semver.org/ <https://semver.org/>`__  
        
          
        
        
        :type SourceCodeUrl: string
        :param SourceCodeUrl: 
        
          A link to a public repository for the source code of your application.
        
          
        
        
        :type SpdxLicenseId: string
        :param SpdxLicenseId: 
        
          A valid identifier from `https\://spdx.org/licenses/ <https://spdx.org/licenses/>`__ .
        
          
        
        
        :type TemplateBody: string
        :param TemplateBody: 
        
          The local raw packaged AWS SAM template file of your application. The file is of the format file://<path>/<filename>.
        
          
        
          Note: Only one of templateBody and templateUrl can be specified, otherwise an error will result.
        
          
        
        
        :type TemplateUrl: string
        :param TemplateUrl: 
        
          A link to the S3 object cotaining the packaged AWS SAM template of your application.
        
          
        
          Note: Only one of templateBody and templateUrl can be specified, otherwise an error will result.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'ApplicationId': 'string',
                'Author': 'string',
                'CreationTime': 'string',
                'Description': 'string',
                'HomePageUrl': 'string',
                'Labels': [
                    'string',
                ],
                'LicenseUrl': 'string',
                'Name': 'string',
                'ReadmeUrl': 'string',
                'SpdxLicenseId': 'string',
                'Version': {
                    'ApplicationId': 'string',
                    'CreationTime': 'string',
                    'ParameterDefinitions': [
                        {
                            'AllowedPattern': 'string',
                            'AllowedValues': [
                                'string',
                            ],
                            'ConstraintDescription': 'string',
                            'DefaultValue': 'string',
                            'Description': 'string',
                            'MaxLength': 123,
                            'MaxValue': 123,
                            'MinLength': 123,
                            'MinValue': 123,
                            'Name': 'string',
                            'NoEcho': True|False,
                            'ReferencedByResources': [
                                'string',
                            ],
                            'Type': 'string'
                        },
                    ],
                    'SemanticVersion': 'string',
                    'SourceCodeUrl': 'string',
                    'TemplateUrl': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **ApplicationId** *(string) --* 
        
              The application Amazon Resource Name (ARN).
        
              
            
        
            - **Author** *(string) --* 
        
              The name of the author publishing the app.
        
              
        
              Minimum length=1. Maximum length=127.
        
              
        
              Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";
        
              
            
        
            - **CreationTime** *(string) --* 
        
              The date and time this resource was created.
        
              
            
        
            - **Description** *(string) --* 
        
              The description of the application.
        
              
        
              Minimum length=1. Maximum length=256
        
              
            
        
            - **HomePageUrl** *(string) --* 
        
              A URL with more information about the application, for example the location of your GitHub repository for the application.
        
              
            
        
            - **Labels** *(list) --* 
        
              Labels to improve discovery of apps in search results.
        
              
        
              Minimum length=1. Maximum length=127. Maximum number of labels: 10
        
              
        
              Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";
        
              
              
        
              - *(string) --* 
          
            
        
            - **LicenseUrl** *(string) --* 
        
              A link to a license file of the app that matches the spdxLicenseID value of your application.
        
              
        
              Maximum size 5 MB
        
              
            
        
            - **Name** *(string) --* 
        
              The name of the application.
        
              
        
              Minimum length=1. Maximum length=140
        
              
        
              Pattern: "[a-zA-Z0-9\\-]+";
        
              
            
        
            - **ReadmeUrl** *(string) --* 
        
              A link to the readme file in Markdown language that contains a more detailed description of the application and how it works.
        
              
        
              Maximum size 5 MB
        
              
            
        
            - **SpdxLicenseId** *(string) --* 
        
              A valid identifier from https://spdx.org/licenses/.
        
              
            
        
            - **Version** *(dict) --* 
        
              Version information about the application.
        
              
              
        
              - **ApplicationId** *(string) --* 
        
                The application Amazon Resource Name (ARN).
        
                
              
        
              - **CreationTime** *(string) --* 
        
                The date and time this resource was created.
        
                
              
        
              - **ParameterDefinitions** *(list) --* 
        
                An array of parameter types supported by the application.
        
                
                
        
                - *(dict) --* 
        
                  Parameters supported by the application.
        
                  
                  
        
                  - **AllowedPattern** *(string) --* 
        
                    A regular expression that represents the patterns to allow for String types.
        
                    
                  
        
                  - **AllowedValues** *(list) --* 
        
                    An array containing the list of values allowed for the parameter.
        
                    
                    
        
                    - *(string) --* 
                
                  
        
                  - **ConstraintDescription** *(string) --* 
        
                    A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of [A-Za-z0-9]+ displays the following error message when the user specifies an invalid value:
        
                    
        
                    Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+ 
        
                    
        
                    By adding a constraint description, such as "must contain only uppercase and lowercase letters and numbers," you can display the following customized error message:
        
                    
        
                    Malformed input-Parameter MyParameter must contain only uppercase and lowercase letters and numbers. 
        
                    
                  
        
                  - **DefaultValue** *(string) --* 
        
                    A value of the appropriate type for the template to use if no value is specified when a stack is created. If you define constraints for the parameter, you must specify a value that adheres to those constraints.
        
                    
                  
        
                  - **Description** *(string) --* 
        
                    A string of up to 4,000 characters that describes the parameter.
        
                    
                  
        
                  - **MaxLength** *(integer) --* 
        
                    An integer value that determines the largest number of characters that you want to allow for String types.
        
                    
                  
        
                  - **MaxValue** *(integer) --* 
        
                    A numeric value that determines the largest numeric value that you want to allow for Number types.
        
                    
                  
        
                  - **MinLength** *(integer) --* 
        
                    An integer value that determines the smallest number of characters that you want to allow for String types.
        
                    
                  
        
                  - **MinValue** *(integer) --* 
        
                    A numeric value that determines the smallest numeric value that you want to allow for Number types.
        
                    
                  
        
                  - **Name** *(string) --* 
        
                    The name of the parameter.
        
                    
                  
        
                  - **NoEcho** *(boolean) --* 
        
                    Whether to mask the parameter value whenever anyone makes a call that describes the stack. If you set the value to true, the parameter value is masked with asterisks (*****).
        
                    
                  
        
                  - **ReferencedByResources** *(list) --* 
        
                    A list of AWS SAM resources that use this parameter.
        
                    
                    
        
                    - *(string) --* 
                
                  
        
                  - **Type** *(string) --* 
        
                    The type of the parameter.
        
                    
        
                    Valid values: String | Number | List<Number> | CommaDelimitedList 
        
                    
        
                    String: A literal string.
        
                    
        
                    For example, users can specify "MyUserName".
        
                    
        
                    Number: An integer or float. AWS CloudFormation validates the parameter value as a number. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a string.
        
                    
        
                    For example, users might specify "8888".
        
                    
        
                    List<Number>: An array of integers or floats that are separated by commas. AWS CloudFormation validates the parameter value as numbers. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a list of strings.
        
                    
        
                    For example, users might specify "80,20", and then Ref results in ["80","20"].
        
                    
        
                    CommaDelimitedList: An array of literal strings that are separated by commas. The total number of strings should be one more than the total number of commas. Also, each member string is space-trimmed.
        
                    
        
                    For example, users might specify "test,dev,prod", and then Ref results in ["test","dev","prod"].
        
                    
              
            
              
        
              - **SemanticVersion** *(string) --* 
        
                The semantic version of the application:
        
                
        
                 `https\://semver.org/ <https://semver.org/>`__  
        
                
              
        
              - **SourceCodeUrl** *(string) --* 
        
                A link to a public repository for the source code of your application.
        
                
              
        
              - **TemplateUrl** *(string) --* 
        
                A link to the packaged AWS SAM template of your application.
        
                
          
        
        """
        return self._make_api_call("CreateApplication", kwargs)

    def create_application_version(self, **kwargs):
        """Creates an application version.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/CreateApplicationVersion>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.create_application_version(
              ApplicationId='string',
              SemanticVersion='string',
              SourceCodeUrl='string',
              TemplateBody='string',
              TemplateUrl='string'
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        :type SemanticVersion: string
        :param SemanticVersion: **[REQUIRED]** 
        
          The semantic version of the new version.
        
          
        
        
        :type SourceCodeUrl: string
        :param SourceCodeUrl: 
        
          A link to a public repository for the source code of your application.
        
          
        
        
        :type TemplateBody: string
        :param TemplateBody: 
        
          The raw packaged AWS SAM template of your application.
        
          
        
        
        :type TemplateUrl: string
        :param TemplateUrl: 
        
          A link to the packaged AWS SAM template of your application.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'ApplicationId': 'string',
                'CreationTime': 'string',
                'ParameterDefinitions': [
                    {
                        'AllowedPattern': 'string',
                        'AllowedValues': [
                            'string',
                        ],
                        'ConstraintDescription': 'string',
                        'DefaultValue': 'string',
                        'Description': 'string',
                        'MaxLength': 123,
                        'MaxValue': 123,
                        'MinLength': 123,
                        'MinValue': 123,
                        'Name': 'string',
                        'NoEcho': True|False,
                        'ReferencedByResources': [
                            'string',
                        ],
                        'Type': 'string'
                    },
                ],
                'SemanticVersion': 'string',
                'SourceCodeUrl': 'string',
                'TemplateUrl': 'string'
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **ApplicationId** *(string) --* 
        
              The application Amazon Resource Name (ARN).
        
              
            
        
            - **CreationTime** *(string) --* 
        
              The date and time this resource was created.
        
              
            
        
            - **ParameterDefinitions** *(list) --* 
        
              An array of parameter types supported by the application.
        
              
              
        
              - *(dict) --* 
        
                Parameters supported by the application.
        
                
                
        
                - **AllowedPattern** *(string) --* 
        
                  A regular expression that represents the patterns to allow for String types.
        
                  
                
        
                - **AllowedValues** *(list) --* 
        
                  An array containing the list of values allowed for the parameter.
        
                  
                  
        
                  - *(string) --* 
              
                
        
                - **ConstraintDescription** *(string) --* 
        
                  A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of [A-Za-z0-9]+ displays the following error message when the user specifies an invalid value:
        
                  
        
                  Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+ 
        
                  
        
                  By adding a constraint description, such as "must contain only uppercase and lowercase letters and numbers," you can display the following customized error message:
        
                  
        
                  Malformed input-Parameter MyParameter must contain only uppercase and lowercase letters and numbers. 
        
                  
                
        
                - **DefaultValue** *(string) --* 
        
                  A value of the appropriate type for the template to use if no value is specified when a stack is created. If you define constraints for the parameter, you must specify a value that adheres to those constraints.
        
                  
                
        
                - **Description** *(string) --* 
        
                  A string of up to 4,000 characters that describes the parameter.
        
                  
                
        
                - **MaxLength** *(integer) --* 
        
                  An integer value that determines the largest number of characters that you want to allow for String types.
        
                  
                
        
                - **MaxValue** *(integer) --* 
        
                  A numeric value that determines the largest numeric value that you want to allow for Number types.
        
                  
                
        
                - **MinLength** *(integer) --* 
        
                  An integer value that determines the smallest number of characters that you want to allow for String types.
        
                  
                
        
                - **MinValue** *(integer) --* 
        
                  A numeric value that determines the smallest numeric value that you want to allow for Number types.
        
                  
                
        
                - **Name** *(string) --* 
        
                  The name of the parameter.
        
                  
                
        
                - **NoEcho** *(boolean) --* 
        
                  Whether to mask the parameter value whenever anyone makes a call that describes the stack. If you set the value to true, the parameter value is masked with asterisks (*****).
        
                  
                
        
                - **ReferencedByResources** *(list) --* 
        
                  A list of AWS SAM resources that use this parameter.
        
                  
                  
        
                  - *(string) --* 
              
                
        
                - **Type** *(string) --* 
        
                  The type of the parameter.
        
                  
        
                  Valid values: String | Number | List<Number> | CommaDelimitedList 
        
                  
        
                  String: A literal string.
        
                  
        
                  For example, users can specify "MyUserName".
        
                  
        
                  Number: An integer or float. AWS CloudFormation validates the parameter value as a number. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a string.
        
                  
        
                  For example, users might specify "8888".
        
                  
        
                  List<Number>: An array of integers or floats that are separated by commas. AWS CloudFormation validates the parameter value as numbers. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a list of strings.
        
                  
        
                  For example, users might specify "80,20", and then Ref results in ["80","20"].
        
                  
        
                  CommaDelimitedList: An array of literal strings that are separated by commas. The total number of strings should be one more than the total number of commas. Also, each member string is space-trimmed.
        
                  
        
                  For example, users might specify "test,dev,prod", and then Ref results in ["test","dev","prod"].
        
                  
            
          
            
        
            - **SemanticVersion** *(string) --* 
        
              The semantic version of the application:
        
              
        
               `https\://semver.org/ <https://semver.org/>`__  
        
              
            
        
            - **SourceCodeUrl** *(string) --* 
        
              A link to a public repository for the source code of your application.
        
              
            
        
            - **TemplateUrl** *(string) --* 
        
              A link to the packaged AWS SAM template of your application.
        
              
        
        """
        return self._make_api_call("CreateApplicationVersion", kwargs)

    def create_cloud_formation_change_set(self, **kwargs):
        """Creates an AWS CloudFormation change set for the given application.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/CreateCloudFormationChangeSet>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.create_cloud_formation_change_set(
              ApplicationId='string',
              ParameterOverrides=[
                  {
                      'Name': 'string',
                      'Value': 'string'
                  },
              ],
              SemanticVersion='string',
              StackName='string'
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        :type ParameterOverrides: list
        :param ParameterOverrides: 
        
          A list of parameter values for the parameters of the application.
        
          
        
        
          - *(dict) --* 
        
            Parameter value of the application.
        
            
        
          
            - **Name** *(string) --* **[REQUIRED]** 
        
              The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
        
              
        
            
            - **Value** *(string) --* **[REQUIRED]** 
        
              The input value associated with the parameter.
        
              
        
            
          
        
        :type SemanticVersion: string
        :param SemanticVersion: 
        
          The semantic version of the application:
        
          
        
           `https\://semver.org/ <https://semver.org/>`__  
        
          
        
        
        :type StackName: string
        :param StackName: **[REQUIRED]** 
        
          The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values. 
        
          
        
          Constraints: Minimum length of 1.
        
          
        
          Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'ApplicationId': 'string',
                'ChangeSetId': 'string',
                'SemanticVersion': 'string',
                'StackId': 'string'
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **ApplicationId** *(string) --* 
        
              The application Amazon Resource Name (ARN).
        
              
            
        
            - **ChangeSetId** *(string) --* 
        
              The Amazon Resource Name (ARN) of the change set.
        
              
        
              Length constraints: Minimum length of 1.
        
              
        
              Pattern: ARN:[-a-zA-Z0-9:/]*
        
              
            
        
            - **SemanticVersion** *(string) --* 
        
              The semantic version of the application:
        
              
        
               `https\://semver.org/ <https://semver.org/>`__  
        
              
            
        
            - **StackId** *(string) --* 
        
              The unique ID of the stack.
        
              
        
        """
        return self._make_api_call("CreateCloudFormationChangeSet", kwargs)

    def delete_application(self, **kwargs):
        """Deletes the specified application.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/DeleteApplication>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.delete_application(
              ApplicationId='string'
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        
        :returns: None
        """
        return self._make_api_call("DeleteApplication", kwargs)

    def get_application(self, **kwargs):
        """Gets the specified application.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/GetApplication>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.get_application(
              ApplicationId='string',
              SemanticVersion='string'
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        :type SemanticVersion: string
        :param SemanticVersion: 
        
          The semantic version of the application to get.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'ApplicationId': 'string',
                'Author': 'string',
                'CreationTime': 'string',
                'Description': 'string',
                'HomePageUrl': 'string',
                'Labels': [
                    'string',
                ],
                'LicenseUrl': 'string',
                'Name': 'string',
                'ReadmeUrl': 'string',
                'SpdxLicenseId': 'string',
                'Version': {
                    'ApplicationId': 'string',
                    'CreationTime': 'string',
                    'ParameterDefinitions': [
                        {
                            'AllowedPattern': 'string',
                            'AllowedValues': [
                                'string',
                            ],
                            'ConstraintDescription': 'string',
                            'DefaultValue': 'string',
                            'Description': 'string',
                            'MaxLength': 123,
                            'MaxValue': 123,
                            'MinLength': 123,
                            'MinValue': 123,
                            'Name': 'string',
                            'NoEcho': True|False,
                            'ReferencedByResources': [
                                'string',
                            ],
                            'Type': 'string'
                        },
                    ],
                    'SemanticVersion': 'string',
                    'SourceCodeUrl': 'string',
                    'TemplateUrl': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **ApplicationId** *(string) --* 
        
              The application Amazon Resource Name (ARN).
        
              
            
        
            - **Author** *(string) --* 
        
              The name of the author publishing the app.
        
              
        
              Minimum length=1. Maximum length=127.
        
              
        
              Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";
        
              
            
        
            - **CreationTime** *(string) --* 
        
              The date and time this resource was created.
        
              
            
        
            - **Description** *(string) --* 
        
              The description of the application.
        
              
        
              Minimum length=1. Maximum length=256
        
              
            
        
            - **HomePageUrl** *(string) --* 
        
              A URL with more information about the application, for example the location of your GitHub repository for the application.
        
              
            
        
            - **Labels** *(list) --* 
        
              Labels to improve discovery of apps in search results.
        
              
        
              Minimum length=1. Maximum length=127. Maximum number of labels: 10
        
              
        
              Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";
        
              
              
        
              - *(string) --* 
          
            
        
            - **LicenseUrl** *(string) --* 
        
              A link to a license file of the app that matches the spdxLicenseID value of your application.
        
              
        
              Maximum size 5 MB
        
              
            
        
            - **Name** *(string) --* 
        
              The name of the application.
        
              
        
              Minimum length=1. Maximum length=140
        
              
        
              Pattern: "[a-zA-Z0-9\\-]+";
        
              
            
        
            - **ReadmeUrl** *(string) --* 
        
              A link to the readme file in Markdown language that contains a more detailed description of the application and how it works.
        
              
        
              Maximum size 5 MB
        
              
            
        
            - **SpdxLicenseId** *(string) --* 
        
              A valid identifier from https://spdx.org/licenses/.
        
              
            
        
            - **Version** *(dict) --* 
        
              Version information about the application.
        
              
              
        
              - **ApplicationId** *(string) --* 
        
                The application Amazon Resource Name (ARN).
        
                
              
        
              - **CreationTime** *(string) --* 
        
                The date and time this resource was created.
        
                
              
        
              - **ParameterDefinitions** *(list) --* 
        
                An array of parameter types supported by the application.
        
                
                
        
                - *(dict) --* 
        
                  Parameters supported by the application.
        
                  
                  
        
                  - **AllowedPattern** *(string) --* 
        
                    A regular expression that represents the patterns to allow for String types.
        
                    
                  
        
                  - **AllowedValues** *(list) --* 
        
                    An array containing the list of values allowed for the parameter.
        
                    
                    
        
                    - *(string) --* 
                
                  
        
                  - **ConstraintDescription** *(string) --* 
        
                    A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of [A-Za-z0-9]+ displays the following error message when the user specifies an invalid value:
        
                    
        
                    Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+ 
        
                    
        
                    By adding a constraint description, such as "must contain only uppercase and lowercase letters and numbers," you can display the following customized error message:
        
                    
        
                    Malformed input-Parameter MyParameter must contain only uppercase and lowercase letters and numbers. 
        
                    
                  
        
                  - **DefaultValue** *(string) --* 
        
                    A value of the appropriate type for the template to use if no value is specified when a stack is created. If you define constraints for the parameter, you must specify a value that adheres to those constraints.
        
                    
                  
        
                  - **Description** *(string) --* 
        
                    A string of up to 4,000 characters that describes the parameter.
        
                    
                  
        
                  - **MaxLength** *(integer) --* 
        
                    An integer value that determines the largest number of characters that you want to allow for String types.
        
                    
                  
        
                  - **MaxValue** *(integer) --* 
        
                    A numeric value that determines the largest numeric value that you want to allow for Number types.
        
                    
                  
        
                  - **MinLength** *(integer) --* 
        
                    An integer value that determines the smallest number of characters that you want to allow for String types.
        
                    
                  
        
                  - **MinValue** *(integer) --* 
        
                    A numeric value that determines the smallest numeric value that you want to allow for Number types.
        
                    
                  
        
                  - **Name** *(string) --* 
        
                    The name of the parameter.
        
                    
                  
        
                  - **NoEcho** *(boolean) --* 
        
                    Whether to mask the parameter value whenever anyone makes a call that describes the stack. If you set the value to true, the parameter value is masked with asterisks (*****).
        
                    
                  
        
                  - **ReferencedByResources** *(list) --* 
        
                    A list of AWS SAM resources that use this parameter.
        
                    
                    
        
                    - *(string) --* 
                
                  
        
                  - **Type** *(string) --* 
        
                    The type of the parameter.
        
                    
        
                    Valid values: String | Number | List<Number> | CommaDelimitedList 
        
                    
        
                    String: A literal string.
        
                    
        
                    For example, users can specify "MyUserName".
        
                    
        
                    Number: An integer or float. AWS CloudFormation validates the parameter value as a number. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a string.
        
                    
        
                    For example, users might specify "8888".
        
                    
        
                    List<Number>: An array of integers or floats that are separated by commas. AWS CloudFormation validates the parameter value as numbers. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a list of strings.
        
                    
        
                    For example, users might specify "80,20", and then Ref results in ["80","20"].
        
                    
        
                    CommaDelimitedList: An array of literal strings that are separated by commas. The total number of strings should be one more than the total number of commas. Also, each member string is space-trimmed.
        
                    
        
                    For example, users might specify "test,dev,prod", and then Ref results in ["test","dev","prod"].
        
                    
              
            
              
        
              - **SemanticVersion** *(string) --* 
        
                The semantic version of the application:
        
                
        
                 `https\://semver.org/ <https://semver.org/>`__  
        
                
              
        
              - **SourceCodeUrl** *(string) --* 
        
                A link to a public repository for the source code of your application.
        
                
              
        
              - **TemplateUrl** *(string) --* 
        
                A link to the packaged AWS SAM template of your application.
        
                
          
        
        """
        return self._make_api_call("GetApplication", kwargs)

    def get_application_policy(self, **kwargs):
        """Retrieves the policy for the application.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/GetApplicationPolicy>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.get_application_policy(
              ApplicationId='string'
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Statements': [
                    {
                        'Actions': [
                            'string',
                        ],
                        'Principals': [
                            'string',
                        ],
                        'StatementId': 'string'
                    },
                ]
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **Statements** *(list) --* 
        
              An array of policy statements applied to the application.
        
              
              
        
              - *(dict) --* 
        
                Policy statement applied to the application.
        
                
                
        
                - **Actions** *(list) --* 
        
                  See `Application Permissions <https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions>`__ for the list of supported actions.
        
                  
                  
        
                  - *(string) --* 
              
                
        
                - **Principals** *(list) --* 
        
                  An AWS account ID, or * to make the application public.
        
                  
                  
        
                  - *(string) --* 
              
                
        
                - **StatementId** *(string) --* 
        
                  A unique ID for the statement.
        
                  
            
          
        
        """
        return self._make_api_call("GetApplicationPolicy", kwargs)

    def list_application_versions(self, **kwargs):
        """Lists versions for the specified application.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/ListApplicationVersions>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.list_application_versions(
              ApplicationId='string',
              MaxItems=123,
              NextToken='string'
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        :type MaxItems: integer
        :param MaxItems: 
        
          The total number of items to return.
        
          
        
        
        :type NextToken: string
        :param NextToken: 
        
          A token to specify where to start paginating.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'NextToken': 'string',
                'Versions': [
                    {
                        'ApplicationId': 'string',
                        'CreationTime': 'string',
                        'SemanticVersion': 'string',
                        'SourceCodeUrl': 'string'
                    },
                ]
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **NextToken** *(string) --* 
        
              The token to request the next page of results.
        
              
            
        
            - **Versions** *(list) --* 
        
              An array of version summaries for the application.
        
              
              
        
              - *(dict) --* 
        
                An application version summary.
        
                
                
        
                - **ApplicationId** *(string) --* 
        
                  The application Amazon Resource Name (ARN).
        
                  
                
        
                - **CreationTime** *(string) --* 
        
                  The date and time this resource was created.
        
                  
                
        
                - **SemanticVersion** *(string) --* 
        
                  The semantic version of the application:
        
                  
        
                   `https\://semver.org/ <https://semver.org/>`__  
        
                  
                
        
                - **SourceCodeUrl** *(string) --* 
        
                  A link to a public repository for the source code of your application.
        
                  
            
          
        
        """
        return self._make_api_call("ListApplicationVersions", kwargs)

    def list_applications(self, **kwargs):
        """Lists applications owned by the requester.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/ListApplications>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.list_applications(
              MaxItems=123,
              NextToken='string'
          )
        :type MaxItems: integer
        :param MaxItems: 
        
          The total number of items to return.
        
          
        
        
        :type NextToken: string
        :param NextToken: 
        
          A token to specify where to start paginating.
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Applications': [
                    {
                        'ApplicationId': 'string',
                        'Author': 'string',
                        'CreationTime': 'string',
                        'Description': 'string',
                        'HomePageUrl': 'string',
                        'Labels': [
                            'string',
                        ],
                        'Name': 'string',
                        'SpdxLicenseId': 'string'
                    },
                ],
                'NextToken': 'string'
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **Applications** *(list) --* 
        
              An array of application summaries.
        
              
              
        
              - *(dict) --* 
        
                Summary of details about the application.
        
                
                
        
                - **ApplicationId** *(string) --* 
        
                  The application Amazon Resource Name (ARN).
        
                  
                
        
                - **Author** *(string) --* 
        
                  The name of the author publishing the app.
        
                  
        
                  Minimum length=1. Maximum length=127.
        
                  
        
                  Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";
        
                  
                
        
                - **CreationTime** *(string) --* 
        
                  The date and time this resource was created.
        
                  
                
        
                - **Description** *(string) --* 
        
                  The description of the application.
        
                  
        
                  Minimum length=1. Maximum length=256
        
                  
                
        
                - **HomePageUrl** *(string) --* 
        
                  A URL with more information about the application, for example the location of your GitHub repository for the application.
        
                  
                
        
                - **Labels** *(list) --* 
        
                  Labels to improve discovery of apps in search results.
        
                  
        
                  Minimum length=1. Maximum length=127. Maximum number of labels: 10
        
                  
        
                  Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";
        
                  
                  
        
                  - *(string) --* 
              
                
        
                - **Name** *(string) --* 
        
                  The name of the application.
        
                  
        
                  Minimum length=1. Maximum length=140
        
                  
        
                  Pattern: "[a-zA-Z0-9\\-]+";
        
                  
                
        
                - **SpdxLicenseId** *(string) --* 
        
                  A valid identifier from `https\://spdx.org/licenses/ <https://spdx.org/licenses/>`__ .
        
                  
            
          
            
        
            - **NextToken** *(string) --* 
        
              The token to request the next page of results.
        
              
        
        """
        return self._make_api_call("ListApplications", kwargs)

    def put_application_policy(self, **kwargs):
        """Sets the permission policy for an application. See `Application Permissions <https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions>`__ for the list of supported actions that can be used with this operation.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/PutApplicationPolicy>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.put_application_policy(
              ApplicationId='string',
              Statements=[
                  {
                      'Actions': [
                          'string',
                      ],
                      'Principals': [
                          'string',
                      ],
                      'StatementId': 'string'
                  },
              ]
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        :type Statements: list
        :param Statements: **[REQUIRED]** 
        
          An array of policy statements applied to the application.
        
          
        
        
          - *(dict) --* 
        
            Policy statement applied to the application.
        
            
        
          
            - **Actions** *(list) --* **[REQUIRED]** 
        
              See `Application Permissions <https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions>`__ for the list of supported actions.
        
              
        
            
              - *(string) --* 
        
              
          
            - **Principals** *(list) --* **[REQUIRED]** 
        
              An AWS account ID, or * to make the application public.
        
              
        
            
              - *(string) --* 
        
              
          
            - **StatementId** *(string) --* 
        
              A unique ID for the statement.
        
              
        
            
          
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'Statements': [
                    {
                        'Actions': [
                            'string',
                        ],
                        'Principals': [
                            'string',
                        ],
                        'StatementId': 'string'
                    },
                ]
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **Statements** *(list) --* 
        
              An array of policy statements applied to the application.
        
              
              
        
              - *(dict) --* 
        
                Policy statement applied to the application.
        
                
                
        
                - **Actions** *(list) --* 
        
                  See `Application Permissions <https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions>`__ for the list of supported actions.
        
                  
                  
        
                  - *(string) --* 
              
                
        
                - **Principals** *(list) --* 
        
                  An AWS account ID, or * to make the application public.
        
                  
                  
        
                  - *(string) --* 
              
                
        
                - **StatementId** *(string) --* 
        
                  A unique ID for the statement.
        
                  
            
          
        
        """
        return self._make_api_call("PutApplicationPolicy", kwargs)

    def update_application(self, **kwargs):
        """Updates the specified application.
        
        
        
        See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/UpdateApplication>`_
        
        
        **Request Syntax** 
        ::
        
          response = client.update_application(
              ApplicationId='string',
              Author='string',
              Description='string',
              HomePageUrl='string',
              Labels=[
                  'string',
              ],
              ReadmeBody='string',
              ReadmeUrl='string'
          )
        :type ApplicationId: string
        :param ApplicationId: **[REQUIRED]** 
        
          The Amazon Resource Name (ARN) of the application.
        
          
        
        
        :type Author: string
        :param Author: 
        
          The name of the author publishing the app.
        
          
        
          Minimum length=1. Maximum length=127.
        
          
        
          Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";
        
          
        
        
        :type Description: string
        :param Description: 
        
          The description of the application.
        
          
        
          Minimum length=1. Maximum length=256
        
          
        
        
        :type HomePageUrl: string
        :param HomePageUrl: 
        
          A URL with more information about the application, for example the location of your GitHub repository for the application.
        
          
        
        
        :type Labels: list
        :param Labels: 
        
          Labels to improve discovery of apps in search results.
        
          
        
          Minimum length=1. Maximum length=127. Maximum number of labels: 10
        
          
        
          Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";
        
          
        
        
          - *(string) --* 
        
          
        
        :type ReadmeBody: string
        :param ReadmeBody: 
        
          A text readme file in Markdown language that contains a more detailed description of the application and how it works.
        
          
        
          Maximum size 5 MB
        
          
        
        
        :type ReadmeUrl: string
        :param ReadmeUrl: 
        
          A link to the readme file in Markdown language that contains a more detailed description of the application and how it works.
        
          
        
          Maximum size 5 MB
        
          
        
        
        
        :rtype: dict
        :returns: 
          
          **Response Syntax** 
        
          
          ::
        
            {
                'ApplicationId': 'string',
                'Author': 'string',
                'CreationTime': 'string',
                'Description': 'string',
                'HomePageUrl': 'string',
                'Labels': [
                    'string',
                ],
                'LicenseUrl': 'string',
                'Name': 'string',
                'ReadmeUrl': 'string',
                'SpdxLicenseId': 'string',
                'Version': {
                    'ApplicationId': 'string',
                    'CreationTime': 'string',
                    'ParameterDefinitions': [
                        {
                            'AllowedPattern': 'string',
                            'AllowedValues': [
                                'string',
                            ],
                            'ConstraintDescription': 'string',
                            'DefaultValue': 'string',
                            'Description': 'string',
                            'MaxLength': 123,
                            'MaxValue': 123,
                            'MinLength': 123,
                            'MinValue': 123,
                            'Name': 'string',
                            'NoEcho': True|False,
                            'ReferencedByResources': [
                                'string',
                            ],
                            'Type': 'string'
                        },
                    ],
                    'SemanticVersion': 'string',
                    'SourceCodeUrl': 'string',
                    'TemplateUrl': 'string'
                }
            }
          **Response Structure** 
        
          
        
          - *(dict) --* 
        
            Success
        
            
            
        
            - **ApplicationId** *(string) --* 
        
              The application Amazon Resource Name (ARN).
        
              
            
        
            - **Author** *(string) --* 
        
              The name of the author publishing the app.
        
              
        
              Minimum length=1. Maximum length=127.
        
              
        
              Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";
        
              
            
        
            - **CreationTime** *(string) --* 
        
              The date and time this resource was created.
        
              
            
        
            - **Description** *(string) --* 
        
              The description of the application.
        
              
        
              Minimum length=1. Maximum length=256
        
              
            
        
            - **HomePageUrl** *(string) --* 
        
              A URL with more information about the application, for example the location of your GitHub repository for the application.
        
              
            
        
            - **Labels** *(list) --* 
        
              Labels to improve discovery of apps in search results.
        
              
        
              Minimum length=1. Maximum length=127. Maximum number of labels: 10
        
              
        
              Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";
        
              
              
        
              - *(string) --* 
          
            
        
            - **LicenseUrl** *(string) --* 
        
              A link to a license file of the app that matches the spdxLicenseID value of your application.
        
              
        
              Maximum size 5 MB
        
              
            
        
            - **Name** *(string) --* 
        
              The name of the application.
        
              
        
              Minimum length=1. Maximum length=140
        
              
        
              Pattern: "[a-zA-Z0-9\\-]+";
        
              
            
        
            - **ReadmeUrl** *(string) --* 
        
              A link to the readme file in Markdown language that contains a more detailed description of the application and how it works.
        
              
        
              Maximum size 5 MB
        
              
            
        
            - **SpdxLicenseId** *(string) --* 
        
              A valid identifier from https://spdx.org/licenses/.
        
              
            
        
            - **Version** *(dict) --* 
        
              Version information about the application.
        
              
              
        
              - **ApplicationId** *(string) --* 
        
                The application Amazon Resource Name (ARN).
        
                
              
        
              - **CreationTime** *(string) --* 
        
                The date and time this resource was created.
        
                
              
        
              - **ParameterDefinitions** *(list) --* 
        
                An array of parameter types supported by the application.
        
                
                
        
                - *(dict) --* 
        
                  Parameters supported by the application.
        
                  
                  
        
                  - **AllowedPattern** *(string) --* 
        
                    A regular expression that represents the patterns to allow for String types.
        
                    
                  
        
                  - **AllowedValues** *(list) --* 
        
                    An array containing the list of values allowed for the parameter.
        
                    
                    
        
                    - *(string) --* 
                
                  
        
                  - **ConstraintDescription** *(string) --* 
        
                    A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of [A-Za-z0-9]+ displays the following error message when the user specifies an invalid value:
        
                    
        
                    Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+ 
        
                    
        
                    By adding a constraint description, such as "must contain only uppercase and lowercase letters and numbers," you can display the following customized error message:
        
                    
        
                    Malformed input-Parameter MyParameter must contain only uppercase and lowercase letters and numbers. 
        
                    
                  
        
                  - **DefaultValue** *(string) --* 
        
                    A value of the appropriate type for the template to use if no value is specified when a stack is created. If you define constraints for the parameter, you must specify a value that adheres to those constraints.
        
                    
                  
        
                  - **Description** *(string) --* 
        
                    A string of up to 4,000 characters that describes the parameter.
        
                    
                  
        
                  - **MaxLength** *(integer) --* 
        
                    An integer value that determines the largest number of characters that you want to allow for String types.
        
                    
                  
        
                  - **MaxValue** *(integer) --* 
        
                    A numeric value that determines the largest numeric value that you want to allow for Number types.
        
                    
                  
        
                  - **MinLength** *(integer) --* 
        
                    An integer value that determines the smallest number of characters that you want to allow for String types.
        
                    
                  
        
                  - **MinValue** *(integer) --* 
        
                    A numeric value that determines the smallest numeric value that you want to allow for Number types.
        
                    
                  
        
                  - **Name** *(string) --* 
        
                    The name of the parameter.
        
                    
                  
        
                  - **NoEcho** *(boolean) --* 
        
                    Whether to mask the parameter value whenever anyone makes a call that describes the stack. If you set the value to true, the parameter value is masked with asterisks (*****).
        
                    
                  
        
                  - **ReferencedByResources** *(list) --* 
        
                    A list of AWS SAM resources that use this parameter.
        
                    
                    
        
                    - *(string) --* 
                
                  
        
                  - **Type** *(string) --* 
        
                    The type of the parameter.
        
                    
        
                    Valid values: String | Number | List<Number> | CommaDelimitedList 
        
                    
        
                    String: A literal string.
        
                    
        
                    For example, users can specify "MyUserName".
        
                    
        
                    Number: An integer or float. AWS CloudFormation validates the parameter value as a number. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a string.
        
                    
        
                    For example, users might specify "8888".
        
                    
        
                    List<Number>: An array of integers or floats that are separated by commas. AWS CloudFormation validates the parameter value as numbers. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a list of strings.
        
                    
        
                    For example, users might specify "80,20", and then Ref results in ["80","20"].
        
                    
        
                    CommaDelimitedList: An array of literal strings that are separated by commas. The total number of strings should be one more than the total number of commas. Also, each member string is space-trimmed.
        
                    
        
                    For example, users might specify "test,dev,prod", and then Ref results in ["test","dev","prod"].
        
                    
              
            
              
        
              - **SemanticVersion** *(string) --* 
        
                The semantic version of the application:
        
                
        
                 `https\://semver.org/ <https://semver.org/>`__  
        
                
              
        
              - **SourceCodeUrl** *(string) --* 
        
                A link to a public repository for the source code of your application.
        
                
              
        
              - **TemplateUrl** *(string) --* 
        
                A link to the packaged AWS SAM template of your application.
        
                
          
        
        """
        return self._make_api_call("UpdateApplication", kwargs)
